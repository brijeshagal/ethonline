// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AdDeactivate extends ethereum.Event {
  get params(): AdDeactivate__Params {
    return new AdDeactivate__Params(this);
  }
}

export class AdDeactivate__Params {
  _event: AdDeactivate;

  constructor(event: AdDeactivate) {
    this._event = event;
  }

  get param0(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get adId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class AdPut extends ethereum.Event {
  get params(): AdPut__Params {
    return new AdPut__Params(this);
  }
}

export class AdPut__Params {
  _event: AdPut;

  constructor(event: AdPut) {
    this._event = event;
  }

  get advertisor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get adId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get clicks(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get impressions(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get isPermanent(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }

  get param5(): i32 {
    return this._event.parameters[5].value.toI32();
  }

  get cid(): string {
    return this._event.parameters[6].value.toString();
  }

  get adName(): string {
    return this._event.parameters[7].value.toString();
  }

  get chainId(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class BrokerageWithdrawal extends ethereum.Event {
  get params(): BrokerageWithdrawal__Params {
    return new BrokerageWithdrawal__Params(this);
  }
}

export class BrokerageWithdrawal__Params {
  _event: BrokerageWithdrawal;

  constructor(event: BrokerageWithdrawal) {
    this._event = event;
  }

  get param0(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PlatformEarning extends ethereum.Event {
  get params(): PlatformEarning__Params {
    return new PlatformEarning__Params(this);
  }
}

export class PlatformEarning__Params {
  _event: PlatformEarning;

  constructor(event: PlatformEarning) {
    this._event = event;
  }

  get platformAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get platformIdx(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get adId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get activeAdEarning(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get totalEarning(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class PlatformRegistered extends ethereum.Event {
  get params(): PlatformRegistered__Params {
    return new PlatformRegistered__Params(this);
  }
}

export class PlatformRegistered__Params {
  _event: PlatformRegistered;

  constructor(event: PlatformRegistered) {
    this._event = event;
  }

  get platformAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get chainId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get platformId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get platformName(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class ReceivedMessage extends ethereum.Event {
  get params(): ReceivedMessage__Params {
    return new ReceivedMessage__Params(this);
  }
}

export class ReceivedMessage__Params {
  _event: ReceivedMessage;

  constructor(event: ReceivedMessage) {
    this._event = event;
  }

  get origin(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get sender(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get message(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class AdRoll__advertisementsResultDetailsStruct extends ethereum.Tuple {
  get clicks(): BigInt {
    return this[0].toBigInt();
  }

  get impressions(): BigInt {
    return this[1].toBigInt();
  }

  get category(): i32 {
    return this[2].toI32();
  }

  get description(): string {
    return this[3].toString();
  }

  get cid(): string {
    return this[4].toString();
  }

  get adName(): string {
    return this[5].toString();
  }
}

export class AdRoll__advertisementsResultCredsStruct extends ethereum.Tuple {
  get advertisor(): Address {
    return this[0].toAddress();
  }

  get id(): BigInt {
    return this[1].toBigInt();
  }

  get clicks(): BigInt {
    return this[2].toBigInt();
  }

  get impressions(): BigInt {
    return this[3].toBigInt();
  }

  get isActive(): boolean {
    return this[4].toBoolean();
  }

  get isPermanent(): boolean {
    return this[5].toBoolean();
  }

  get chainId(): BigInt {
    return this[6].toBigInt();
  }
}

export class AdRoll__advertisementsResult {
  value0: AdRoll__advertisementsResultDetailsStruct;
  value1: AdRoll__advertisementsResultCredsStruct;

  constructor(
    value0: AdRoll__advertisementsResultDetailsStruct,
    value1: AdRoll__advertisementsResultCredsStruct
  ) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromTuple(this.value0));
    map.set("value1", ethereum.Value.fromTuple(this.value1));
    return map;
  }

  getDetails(): AdRoll__advertisementsResultDetailsStruct {
    return this.value0;
  }

  getCreds(): AdRoll__advertisementsResultCredsStruct {
    return this.value1;
  }
}

export class AdRoll__getClicksAndImpressionsResultValue0Struct extends ethereum.Tuple {
  get platformClicks(): BigInt {
    return this[0].toBigInt();
  }

  get platformImpressions(): BigInt {
    return this[1].toBigInt();
  }

  get activeEarning(): BigInt {
    return this[2].toBigInt();
  }
}

export class AdRoll__platformsResult {
  value0: BigInt;
  value1: BigInt;
  value2: Address;
  value3: string;
  value4: BigInt;
  value5: BigInt;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: Address,
    value3: string,
    value4: BigInt,
    value5: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }

  getActiveEarning(): BigInt {
    return this.value0;
  }

  getTotalEarning(): BigInt {
    return this.value1;
  }

  getPlatformAddress(): Address {
    return this.value2;
  }

  getPlatformName(): string {
    return this.value3;
  }

  getPlatformIdx(): BigInt {
    return this.value4;
  }

  getChainId(): BigInt {
    return this.value5;
  }
}

export class AdRoll extends ethereum.SmartContract {
  static bind(address: Address): AdRoll {
    return new AdRoll("AdRoll", address);
  }

  ImpressionsToClicksRatio(): BigInt {
    let result = super.call(
      "ImpressionsToClicksRatio",
      "ImpressionsToClicksRatio():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_ImpressionsToClicksRatio(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "ImpressionsToClicksRatio",
      "ImpressionsToClicksRatio():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  advertisements(param0: BigInt): AdRoll__advertisementsResult {
    let result = super.call(
      "advertisements",
      "advertisements(uint256):((uint256,uint256,uint8,string,string,string),(address,uint256,uint256,uint256,bool,bool,uint32))",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return changetype<AdRoll__advertisementsResult>(
      new AdRoll__advertisementsResult(
        changetype<AdRoll__advertisementsResultDetailsStruct>(
          result[0].toTuple()
        ),
        changetype<AdRoll__advertisementsResultCredsStruct>(result[1].toTuple())
      )
    );
  }

  try_advertisements(
    param0: BigInt
  ): ethereum.CallResult<AdRoll__advertisementsResult> {
    let result = super.tryCall(
      "advertisements",
      "advertisements(uint256):((uint256,uint256,uint8,string,string,string),(address,uint256,uint256,uint256,bool,bool,uint32))",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<AdRoll__advertisementsResult>(
        new AdRoll__advertisementsResult(
          changetype<AdRoll__advertisementsResultDetailsStruct>(
            value[0].toTuple()
          ),
          changetype<AdRoll__advertisementsResultCredsStruct>(
            value[1].toTuple()
          )
        )
      )
    );
  }

  advertisorsAds(advertisor: Address, param1: BigInt): BigInt {
    let result = super.call(
      "advertisorsAds",
      "advertisorsAds(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(advertisor),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_advertisorsAds(
    advertisor: Address,
    param1: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "advertisorsAds",
      "advertisorsAds(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(advertisor),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  brokerage(): BigInt {
    let result = super.call("brokerage", "brokerage():(uint256)", []);

    return result[0].toBigInt();
  }

  try_brokerage(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("brokerage", "brokerage():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  costperClick(): BigInt {
    let result = super.call("costperClick", "costperClick():(uint256)", []);

    return result[0].toBigInt();
  }

  try_costperClick(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("costperClick", "costperClick():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  costperImpression(): BigInt {
    let result = super.call(
      "costperImpression",
      "costperImpression():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_costperImpression(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "costperImpression",
      "costperImpression():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getClicksAndImpressions(
    platformAddress: Address,
    adId: BigInt
  ): AdRoll__getClicksAndImpressionsResultValue0Struct {
    let result = super.call(
      "getClicksAndImpressions",
      "getClicksAndImpressions(address,uint256):((uint256,uint256,uint256))",
      [
        ethereum.Value.fromAddress(platformAddress),
        ethereum.Value.fromUnsignedBigInt(adId)
      ]
    );

    return changetype<AdRoll__getClicksAndImpressionsResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getClicksAndImpressions(
    platformAddress: Address,
    adId: BigInt
  ): ethereum.CallResult<AdRoll__getClicksAndImpressionsResultValue0Struct> {
    let result = super.tryCall(
      "getClicksAndImpressions",
      "getClicksAndImpressions(address,uint256):((uint256,uint256,uint256))",
      [
        ethereum.Value.fromAddress(platformAddress),
        ethereum.Value.fromUnsignedBigInt(adId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<AdRoll__getClicksAndImpressionsResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  interchainSecurityModule(): Address {
    let result = super.call(
      "interchainSecurityModule",
      "interchainSecurityModule():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_interchainSecurityModule(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "interchainSecurityModule",
      "interchainSecurityModule():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  permanentAdCharge(): BigInt {
    let result = super.call(
      "permanentAdCharge",
      "permanentAdCharge():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_permanentAdCharge(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "permanentAdCharge",
      "permanentAdCharge():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  platformIdxToAddress(param0: BigInt): Address {
    let result = super.call(
      "platformIdxToAddress",
      "platformIdxToAddress(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toAddress();
  }

  try_platformIdxToAddress(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "platformIdxToAddress",
      "platformIdxToAddress(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  platforms(param0: Address): AdRoll__platformsResult {
    let result = super.call(
      "platforms",
      "platforms(address):(uint256,uint256,address,string,uint256,uint32)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new AdRoll__platformsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toAddress(),
      result[3].toString(),
      result[4].toBigInt(),
      result[5].toBigInt()
    );
  }

  try_platforms(param0: Address): ethereum.CallResult<AdRoll__platformsResult> {
    let result = super.tryCall(
      "platforms",
      "platforms(address):(uint256,uint256,address,string,uint256,uint32)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AdRoll__platformsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toAddress(),
        value[3].toString(),
        value[4].toBigInt(),
        value[5].toBigInt()
      )
    );
  }

  totalAds(): BigInt {
    let result = super.call("totalAds", "totalAds():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalAds(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalAds", "totalAds():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalPlatforms(): BigInt {
    let result = super.call("totalPlatforms", "totalPlatforms():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalPlatforms(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalPlatforms",
      "totalPlatforms():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class BatchUpdateClicksAndImpressionsCall extends ethereum.Call {
  get inputs(): BatchUpdateClicksAndImpressionsCall__Inputs {
    return new BatchUpdateClicksAndImpressionsCall__Inputs(this);
  }

  get outputs(): BatchUpdateClicksAndImpressionsCall__Outputs {
    return new BatchUpdateClicksAndImpressionsCall__Outputs(this);
  }
}

export class BatchUpdateClicksAndImpressionsCall__Inputs {
  _call: BatchUpdateClicksAndImpressionsCall;

  constructor(call: BatchUpdateClicksAndImpressionsCall) {
    this._call = call;
  }

  get _platformAddresses(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _clicks(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get _impressions(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get _adId(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class BatchUpdateClicksAndImpressionsCall__Outputs {
  _call: BatchUpdateClicksAndImpressionsCall;

  constructor(call: BatchUpdateClicksAndImpressionsCall) {
    this._call = call;
  }
}

export class HandleCall extends ethereum.Call {
  get inputs(): HandleCall__Inputs {
    return new HandleCall__Inputs(this);
  }

  get outputs(): HandleCall__Outputs {
    return new HandleCall__Outputs(this);
  }
}

export class HandleCall__Inputs {
  _call: HandleCall;

  constructor(call: HandleCall) {
    this._call = call;
  }

  get _origin(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _sender(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class HandleCall__Outputs {
  _call: HandleCall;

  constructor(call: HandleCall) {
    this._call = call;
  }
}

export class PutAdCall extends ethereum.Call {
  get inputs(): PutAdCall__Inputs {
    return new PutAdCall__Inputs(this);
  }

  get outputs(): PutAdCall__Outputs {
    return new PutAdCall__Outputs(this);
  }
}

export class PutAdCall__Inputs {
  _call: PutAdCall;

  constructor(call: PutAdCall) {
    this._call = call;
  }

  get _ad(): PutAdCall_adStruct {
    return changetype<PutAdCall_adStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get advertisor(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _isPermanent(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }

  get _chainId(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class PutAdCall__Outputs {
  _call: PutAdCall;

  constructor(call: PutAdCall) {
    this._call = call;
  }
}

export class PutAdCall_adStruct extends ethereum.Tuple {
  get clicks(): BigInt {
    return this[0].toBigInt();
  }

  get impressions(): BigInt {
    return this[1].toBigInt();
  }

  get category(): i32 {
    return this[2].toI32();
  }

  get description(): string {
    return this[3].toString();
  }

  get cid(): string {
    return this[4].toString();
  }

  get adName(): string {
    return this[5].toString();
  }
}

export class RecievePayCall extends ethereum.Call {
  get inputs(): RecievePayCall__Inputs {
    return new RecievePayCall__Inputs(this);
  }

  get outputs(): RecievePayCall__Outputs {
    return new RecievePayCall__Outputs(this);
  }
}

export class RecievePayCall__Inputs {
  _call: RecievePayCall;

  constructor(call: RecievePayCall) {
    this._call = call;
  }

  get receiver(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RecievePayCall__Outputs {
  _call: RecievePayCall;

  constructor(call: RecievePayCall) {
    this._call = call;
  }
}

export class RegisterPlatformCall extends ethereum.Call {
  get inputs(): RegisterPlatformCall__Inputs {
    return new RegisterPlatformCall__Inputs(this);
  }

  get outputs(): RegisterPlatformCall__Outputs {
    return new RegisterPlatformCall__Outputs(this);
  }
}

export class RegisterPlatformCall__Inputs {
  _call: RegisterPlatformCall;

  constructor(call: RegisterPlatformCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _chainId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _platformAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class RegisterPlatformCall__Outputs {
  _call: RegisterPlatformCall;

  constructor(call: RegisterPlatformCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetInterchainSecurityModuleCall extends ethereum.Call {
  get inputs(): SetInterchainSecurityModuleCall__Inputs {
    return new SetInterchainSecurityModuleCall__Inputs(this);
  }

  get outputs(): SetInterchainSecurityModuleCall__Outputs {
    return new SetInterchainSecurityModuleCall__Outputs(this);
  }
}

export class SetInterchainSecurityModuleCall__Inputs {
  _call: SetInterchainSecurityModuleCall;

  constructor(call: SetInterchainSecurityModuleCall) {
    this._call = call;
  }

  get _ism(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetInterchainSecurityModuleCall__Outputs {
  _call: SetInterchainSecurityModuleCall;

  constructor(call: SetInterchainSecurityModuleCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateCostPlanCall extends ethereum.Call {
  get inputs(): UpdateCostPlanCall__Inputs {
    return new UpdateCostPlanCall__Inputs(this);
  }

  get outputs(): UpdateCostPlanCall__Outputs {
    return new UpdateCostPlanCall__Outputs(this);
  }
}

export class UpdateCostPlanCall__Inputs {
  _call: UpdateCostPlanCall;

  constructor(call: UpdateCostPlanCall) {
    this._call = call;
  }

  get _costperClick(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _costperImpression(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateCostPlanCall__Outputs {
  _call: UpdateCostPlanCall;

  constructor(call: UpdateCostPlanCall) {
    this._call = call;
  }
}

export class UpdateImpressionsToClicksRatioCall extends ethereum.Call {
  get inputs(): UpdateImpressionsToClicksRatioCall__Inputs {
    return new UpdateImpressionsToClicksRatioCall__Inputs(this);
  }

  get outputs(): UpdateImpressionsToClicksRatioCall__Outputs {
    return new UpdateImpressionsToClicksRatioCall__Outputs(this);
  }
}

export class UpdateImpressionsToClicksRatioCall__Inputs {
  _call: UpdateImpressionsToClicksRatioCall;

  constructor(call: UpdateImpressionsToClicksRatioCall) {
    this._call = call;
  }

  get _newRatio(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateImpressionsToClicksRatioCall__Outputs {
  _call: UpdateImpressionsToClicksRatioCall;

  constructor(call: UpdateImpressionsToClicksRatioCall) {
    this._call = call;
  }
}

export class WithdrawBrokerageCall extends ethereum.Call {
  get inputs(): WithdrawBrokerageCall__Inputs {
    return new WithdrawBrokerageCall__Inputs(this);
  }

  get outputs(): WithdrawBrokerageCall__Outputs {
    return new WithdrawBrokerageCall__Outputs(this);
  }
}

export class WithdrawBrokerageCall__Inputs {
  _call: WithdrawBrokerageCall;

  constructor(call: WithdrawBrokerageCall) {
    this._call = call;
  }
}

export class WithdrawBrokerageCall__Outputs {
  _call: WithdrawBrokerageCall;

  constructor(call: WithdrawBrokerageCall) {
    this._call = call;
  }
}
